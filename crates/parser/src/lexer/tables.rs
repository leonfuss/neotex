use super::token::LexToken;

pub(crate) const UNIT_TABLE: [(char, char); 11] = [
    ('p', 't'),
    ('m', 'm'),
    ('c', 'm'),
    ('i', 'n'),
    ('e', 'x'),
    ('e', 'm'),
    ('b', 'p'),
    ('d', 'd'),
    ('c', 'c'),
    ('s', 'p'),
    ('n', 'd'),
];

pub(crate) const SYMBOL_TABLE: [(char, LexToken); 29] = [
    ('{', LexToken::OpenBrace),
    ('}', LexToken::CloseBrace),
    ('[', LexToken::OpenBracket),
    (']', LexToken::CloseBracket),
    ('(', LexToken::OpenParen),
    (')', LexToken::CloseParen),
    ('<', LexToken::Less),
    ('>', LexToken::Greater),
    ('=', LexToken::Equal),
    ('+', LexToken::Plus),
    ('-', LexToken::Minus),
    ('*', LexToken::Star),
    ('/', LexToken::Slash),
    ('!', LexToken::Bang),
    (';', LexToken::Semicolon),
    (',', LexToken::Comma),
    ('.', LexToken::Period),
    ('@', LexToken::At),
    ('&', LexToken::Ampersand),
    ('#', LexToken::NumSign),
    (':', LexToken::Colon),
    ('?', LexToken::Question),
    ('|', LexToken::Pipe),
    ('"', LexToken::DoubleApostrophe),
    ('\'', LexToken::SingleApostrophe),
    ('^', LexToken::Carret),
    ('_', LexToken::Underscore),
    ('~', LexToken::Tilde),
    ('$', LexToken::Dollar),
];

pub(crate) const COMPOSITE_SYMBOL_TABLE: [(char, char, LexToken); 12] = [
    ('-', '>', LexToken::RightArrow),
    ('<', '-', LexToken::LeftArrow),
    ('=', '=', LexToken::Equal),
    ('!', '=', LexToken::NotEqual),
    ('<', '=', LexToken::LessEqual),
    ('>', '=', LexToken::GreaterEqual),
    (':', ':', LexToken::PathSeparator),
    ('+', '=', LexToken::PlusEqual),
    ('-', '=', LexToken::MinusEqual),
    ('*', '=', LexToken::MulEqual),
    ('/', '=', LexToken::DivEqual),
    ('$', '$', LexToken::MathDisplay),
];
